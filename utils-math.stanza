defpackage utils/math :
  import core
  import math

public defn sqr (x:Float) -> Float : x * x

public defn modulo (x:Float, y:Float) -> Float :
  val d = x / y
  val f = d - to-float(to-int(d))
  y * f

public defn sign (x:Float) -> Float :
  1.0f when x > 0.0f else -1.0f when x < 0.0f else 0.0f

public defn f+ (a:Float, b:Float) : a + b ;; NEEDED FOR REDUCE BECAUSE OF BUG IN TYPE INFERENCE
public defn i+ (a:Int, b:Int) : a + b     ;; NEEDED FOR REDUCE BECAUSE OF BUG IN TYPE INFERENCE

